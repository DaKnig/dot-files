# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty
bindsym $mod+Shift+Return exec "alacritty ; wait 1; swaymsg 'floating enable'"

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec bemenu-run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+Shift+d exec --no-startup-id j4-dmenu-desktop --dmenu="bemenu -i"

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus up
bindsym $mod+l focus down
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move down
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1 ï‰©"
set $ws2 "2 ï„¡"
set $ws3 "3 ï‚†"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9 ðŸŽµ"
set $ws10 "10 ï˜™"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# restart sway inplace (preserves your layout/session)
bindsym $mod+Shift+r reload
# exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
## key remaps (wayland)
input "type:keyboard" {
	xkb_file ~/.config/sway/keymap.xkb
	xkb_layout us,il
	xkb_options grp:alt_shift_toggle
}

input 2:7:SynPS/2_Synaptics_TouchPad {
	tap enabled,
	events disabled
}

##custom settings

bindsym $mod+Shift+f	exec firefox
bindsym $mod+F4		exec grimshot copy area
bindsym $mod+Shift+F4	exec peek
bindsym $mod+F5		input 2:7:SynPS/2_Synaptics_TouchPad events toggle enabled disabled
bindsym $mod+shift+F8		exec ibus emoji

bindsym $mod+F2		exec --no-startup-id light -T 0.9 
bindsym $mod+F3		exec --no-startup-id light -T 1.3 
bindsym $mod+F11	exec --no-startup-id pactl set-sink-volume $(pactl list short sinks|sed -nE "s/\t.+//;1p") +5%
bindsym $mod+F10	exec --no-startup-id pactl set-sink-volume $(pactl list short sinks|sed -nE "s/\t.+//;1p") -5%
bindsym $mod+F12	exec --no-startup-id pactl set-sink-mute   $(pactl list short sinks|sed -nE "s/\t.+//;1p") toggle

bindsym $mod+shift+F11	exec --no-startup-id pactl set-sink-volume $(pactl list short sinks|sed -nE "s/\t.+//;2p") +5%
bindsym $mod+shift+F10	exec --no-startup-id pactl set-sink-volume $(pactl list short sinks|sed -nE "s/\t.+//;2p") -5%
bindsym $mod+shift+F12	exec --no-startup-id pactl set-sink-mute   $(pactl list short sinks|sed -nE "s/\t.+//;2p") toggle

bindsym $mod+shift+n exec nautilus

bindsym $mod+shift+F1 exec "sleep 1; pkill -SIGUSR1 swayidle"
# sleep 1 && xset dpms force off

exec_always light -N 0.2
exec_always swayidle -w \
	timeout 1500 "swaymsg output eDP-1 dpms off" \
	resume "swaymsg output eDP-1 dpms on"

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}
